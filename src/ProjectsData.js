export const ProjectsData = [
    {
        projectTitle: "Muscle Magic",
        projectDescription: "Muscle Magic is a local multiplayer brawler where you play as powerful, muscular wizards and battle your opponents using a variety of wacky spells. Grab up to 3 friends and duke it out to see who is truly the fittest mage of them all!",
        projectPage: "https://store.steampowered.com/app/1061150/Muscle_Magic/",
        projectDirectory: "projects/MuscleMagic/",
        projectTeamSize: "20+",
        projectEngine: "Unreal 4",
        projectYear: "2019",
        projectDevStory: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
        screenshotCount: 5,
        projectTrailerLink: "https://www.youtube.com/embed/XtOX2gqb1wE",
    },
    {
        projectTitle: "To The Core",
        projectDescription: "To the Core is a roguelite action-platforming speedrunner where you run, jump, and dash through levels filled with obstacles and hazards. Fight through heaps of enemies to save your father and set record times.",
        projectPage: "https://store.steampowered.com/app/874030/To_the_Core/",
        projectDirectory: "projects/ToTheCore/",
        projectTeamSize: "20+",
        projectEngine: "Unreal 4",
        projectYear: "2018",
        projectDevStory: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
        screenshotCount: 6,
        projectTrailerLink: "https://www.youtube.com/embed/Zq4nqB4I4EM",
    },
    {
        projectTitle: "Random Racing",
        projectDescription: "Random Racing is a racing game inspired by Mario Kart.",
        projectPage: "https://store.steampowered.com/app/1061150/Muscle_Magic/",
        projectDirectory: "projects/RandomRacing/",
        projectTeamSize: "4",
        projectEngine: "Unity3D",
        projectYear: "2015",
        projectDevStory: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
        screenshotCount: 4,
    },
    {
        projectTitle: "Dialog Editor V1 (IMGUI)",
        projectDescription: "Dialog Editor V1 was a custom Unity Editor tool I developed as my graduation project at BUAS. Instead of pursuing an internship, I chose to create my own project based on my passion for RPGs, specifically JRPGs. The tool was designed for building RPG-style dialog systems and served mainly as a learning project to improve my Unity Editor development skills. It was built entirely with IMGUI, which was the standard at the time. While the tool was never used in a production game, it laid the groundwork for my future projects.",
        projectDirectory: "projects/DialogEditorV1/",
        projectTeamSize: "Solo",
        projectEngine: "Unity3D",
        projectYear: "2020",
        projectDevStory: "When I started Dialog Editor V1, the goal wasn’t to solve a specific problem — it was driven by curiosity and a long-standing love for RPGs. Initially, I wanted to create a full set of RPG development tools, but after discussions with my teacher, I focused on just the dialog editor to make the project more manageable and impactful.\n\nAt the time, IMGUI was the standard way to create editor tools in Unity, so I built the entire tool with it. I was responsible for everything: designing the editor's layout, coding the functionality, and creating all of the features from scratch.\n\nThe feature I was most proud of was the 'Dialog Action' system. It allowed a piece of code to run when specific dialog was triggered, enabling dynamic interactions like checking if the player had enough apples and changing the dialog based on that condition. Developing this feature pushed me to learn about C# reflection.\n\nHowever, using reflection introduced a major performance problem. Because IMGUI refreshes on every small action, the system was constantly retrieving field information, which slowed everything down. After investigating the issue, I optimized it by caching the reflection data. Around the same time, Unity released an early version of 'UI Elements' (now UI Toolkit), which offered better performance for editor tools. I decided to partially migrate the tool over to UI Elements to improve responsiveness.\n\nAlthough Dialog Editor V1 was a solo project, my teacher acted as a stakeholder, giving feedback and guiding me through the development process. The tool itself was never published or used commercially, but it laid important foundations for my future work.",
    },
    {
        projectTitle: "Dialog Editor V2 (UI Toolkit)",
        projectDescription: "Dialog Editor V2 was the continuation of my Dialog Editor project, with the goal of improving performance and making the codebase more maintainable. After noticing the limitations of V1, especially with performance issues caused by IMGUI and the increasing complexity of mixing styling and functionality, I decided to rebuild the tool using Unity’s newer UI Toolkit system. V2 was designed to be cleaner, faster, and more intuitive to use, and it also sparked the early ideas for creating a full Visual Novel Engine in the future.",
        projectDirectory: "projects/DialogEditorV2/",
        projectTeamSize: "Solo",
        projectEngine: "Unity3D",
        projectYear: "2021",
        projectDevStory: "The decision to create Dialog Editor V2 came from two main reasons: performance issues in V1 and the messy, hard-to-maintain codebase. In V1, visuals and logic were tightly coupled, which made updates complicated. UI Toolkit offered a way to separate these concerns — similar to how HTML and CSS work — so I took the opportunity to rebuild everything from the ground up.\n\nFor V2, I completely redesigned the UI to make it easier and faster to work with. The new structure separated the visuals from the functionality, which made the tool not only more readable in code but also more flexible when updating or changing the design.\n\nThis was still a solo project, where I handled everything from design, coding, UI, and feature development. The experience I gained from V1’s shortcomings directly fed into the improvements I made for V2. One of the biggest challenges was learning UI Toolkit itself — the documentation at the time was still limited, and my lack of experience with HTML and CSS made understanding UI Toolkit’s structure a bit harder. I ended up spending a lot of time researching and finding answers through the Unity forums.\n\nWhat I’m most proud of in V2 is how clean the tool looks and how flexible it became — it wasn’t just useful for creating dialog trees, but it could also serve as a basic quest design tool. During the development of V2, I started thinking more seriously about expanding the tool into something bigger, like a plugin that would make it easier to create Visual Novel-type games. This eventually planted the idea of building a full Visual Novel Engine.\n\nWhile Dialog Editor V2 was never released commercially, it remains an important step toward that long-term goal.",
    }
];